import com.mmodding.gradle.api.EnvironmentTarget

plugins {
	id 'com.mmodding.gradle' version '0.0.14'
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

mmodding {
	configureFabricModJson {
		name = "Math Hell"
		namespace = "math_hell"
		license = "LGPL-3.0"
		description = "Wrong math destroys the world."
		icon = "assets/math_hell/icon.png"
		addAuthor("FirstMegaGame4")
		addContributor("Aethyus (Icon Artist)")
		withContact {
			it.homepage = "https://github.com/FirstMegaGame4/math-hell"
			it.sources = "https://github.com/FirstMegaGame4/math-hell"
			it.issues = "https://github.com/FirstMegaGame4/math-hell/issues"
		}
		environment = EnvironmentTarget.ANY
		withEntrypoints {
			it.init("fr.firstmegagame4.mh.MathHell")
		}
		addMixin("math_hell.mixins.json")
		withDependencies {
			it.javaVersion = ">=" + 21
			it.minecraftVersion = "~" + project.minecraft_version
			it.fabricLoaderVersion = ">=" + project.loader_version
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}